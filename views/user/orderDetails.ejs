<%- include("../../views/partials/user/header") %>]

    <style>
        .order-tab {
            display: flex;
            justify-content: space-between;
        }

        .order-status {
            padding: 5px 10px;
            border-radius: 5px;
            font-weight: bold;
            font-size: 18px;
            text-align: center;
        }
        .order-details-section {
                padding: 20px;
            }

            .section-title {
                font-size: 28px;
                margin-bottom: 20px;
                font-weight: bold;
                text-align: center;
                color: #333;
            }

            .order-summary,
            .shipping-address,
            .product-list {
                margin-bottom: 20px;
                padding: 20px;
                background-color: #ffffff;
                border-radius: 10px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }

            .order-summary h5,
            .shipping-address h5 {
                font-size: 20px;
                margin-bottom: 10px;
                color: #555;
            }

            .product-card {
                display: flex;
                align-items: center;
                margin-bottom: 15px;
                padding: 15px;
                border: 1px solid #ddd;
                border-radius: 8px;
                background-color: #ffffff;
            }

            .product-image img {
                width: 100px;
                height: 100px;
                object-fit: cover;
                border-radius: 5px;
                margin-right: 20px;
            }

            .product-details p {
                margin: 0;
                font-size: 14px;
                color: #555;
            }

            .btn {
                padding: 10px 20px;
                font-size: 16px;
                border-radius: 5px;
                cursor: pointer;
                text-align: center;
            }

            .btn-primary {
                background-color: #007bff;
                color: white;
                border: none;
            }

            .btn-primary:hover {
                background-color: #0056b3;
            }

            .btn-danger {
                background-color: #dc3545;
                color: white;
                border: none;
            }

            .btn-danger:hover {
                background-color: #c82333;
            }

            .btn-secondary {
                background-color: #6c757d;
                color: white;
                border: none;
            }

            .btn-secondary:hover {
                background-color: #5a6268;
            }

            .order-actions {
                text-align: center;
                margin-top: 20px;
            }

            .back-button {
                text-align: center;
                margin-top: 20px;
            }
    </style>

    <div class="spacer"></div>
    <div class="container-fluid py-4">
        <section class="order-details-section">
            <!-- Header Section -->
            <h2 class="section-title text-center mb-4">Order Details</h2>

            <!-- Order Summary -->
            <div class="order-summary mb-4">
                <div class="d-flex justify-content-between">
                    <div>
                        <h5>Order ID: <%= order.orderId %>
                        </h5>
                        <p><strong>Date:</strong>
                            <%= new Date(order.createdAt).toLocaleDateString() %>
                        </p>
                        <p><strong>Payment Method:</strong>
                            <%= order.paymentMethod %>
                        </p>
                                <strong>Payment Status : </strong>
                                <% if (order.paymentStatus==='Pending' ) { %>
                                <span>Pending</span>
                                <% } else if (order.paymentStatus==='Refunded' ) { %>
                                <span>Refunded</span>
                                <% } else { %>
                                <span>Paid</span>
                                <% } %>
                    </div>
                    <div>
                        <p><strong>Total Amount:</strong> ₹<%= order.totalAmount %>
                        </p>
                        <p><strong>Discount Amount:</strong> ₹<%= order.discount %>
                        </p>
                        <p><strong>Final Amount:</strong> ₹<%= order.finalAmount %>
                        </p>
                    </div>
                </div>
            </div>

            <!-- Shipping Address Section -->
            <div class="shipping-address mb-4">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h5>Shipping Address:</h5>
                        <p>
                            <strong>Name:</strong>
                            <%= order.address.name %><br>
                                <strong>Address:</strong>
                                <%= order.address.address %>,<br>
                                    <strong>City:</strong>
                                    <%= order.address.city %>,<br>
                                        <strong>State:</strong>
                                        <%= order.address.state %>,
                                            <strong>Pincode:</strong>
                                            <%= order.address.pincode %><br>
                                                <strong>Phone:</strong>
                                                <%= order.address.phone %>
                        </p>
                    </div>
                    <div class="order-status">
                        <% if (order.status==='Returned' ) { %>
                            <span class=" rounded-pill alert-warning">Returned</span>
                            <% }else if (order.status==='Return Request' ) { %>
                                <span class=" rounded-pill alert-warning">Return Request</span>
                                <% }else if (order.status==='Pending' ) { %>
                                    <span class=" rounded-pill alert-warning">Pending</span>
                                    <% } else if (order.status==='Cancelled' ) { %>
                                        <span class=" rounded-pill alert-danger">Cancelled</span>
                                        <% } else if (order.status==='Shipped' ) { %>
                                            <span class=" rounded-pill alert-primary">Shipped</span>
                                            <% } else if (order.status==='Delivered' ) { %>
                                                <span class=" rounded-pill alert-success">Delivered</span>
                                                <% } else { %>
                                                    <span class=" rounded-pill alert-secondary">
                                                        <%= order.status %>
                                                    </span>
                                                    <% } %>
                    </div>
                </div>
            </div>

            <!-- Product List Section -->
            <div class="product-list mb-4">
                <h5>Ordered Products:</h5>
                <% order.items.forEach((item)=> { %>
                    <div class="product-card d-flex align-items-center mb-3 p-3 border rounded">
                        <div class="product-image me-3">
                            <img src="/uploads/re-image/<%= item.productId.productImage[0] %>"
                                alt="<%= item.productId.productName %>" onerror="this.src='/uploads/placeholder.png'"
                                style="width: 80px; height: auto; border-radius: 5px;" />
                        </div>
                        <div class="product-details w-100">
                            <div class="d-flex justify-content-between">
                                <p><strong>Product:</strong>
                                    <%= item.productId.productName %>
                                </p>
                                <p><strong>Price:</strong> ₹<%= item.productId.salePrice %>
                                </p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <p><strong>Quantity:</strong>
                                    <%= item.quantity %>
                                </p>
                                <p><strong>Subtotal:</strong> ₹<%= item.productId.salePrice * item.quantity %>
                                </p>
                            </div>
                            <div class="d-flex justify-content-between">
                                <%if(order.status=='Pending'){%>
                                <button class="btn btn-danger"
                                onclick="cancelSingle('<%= order._id %>','<%= item.productId._id %>')">
                                Cancel
                                </button>
                                <%}%>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>

            <!-- Action Buttons -->
            <div class="order-actions d-flex justify-content-end mb-3">
                <% if (order.paymentStatus==='Pending' && order.paymentMethod==='razorpay' ) { %>
                    <button class="btn btn-primary me-2"
                        onclick="retryPayment('<%= order._id %>')">
                        Retry Payment
                    </button>
                <% } %>
                <% if (order.status==='Delivered' ) { %>
                    <a id="invoice-btn" class="btn btn-primary me-2"
                        href="/generateInvoice?orderId=<%= order._id %>">Download Invoice</a>
                    <button id="return-btn" class="btn btn-primary me-2"
                        onclick="returnOrder('<%= order._id %>')">Return</button>
                    <% } else if (order.status==='Shipped' || order.status==='Pending' ) { %>
                        <button id="cancel-btn" class="btn btn-danger me-2"
                            onclick="cancelOrder('<%= order._id %>')">Cancel</button>
                        <% } %>
                            <button onclick="window.history.back()" class="btn btn-secondary">Back</button>
            </div>
        </section>
    </div>

    <%- include("../../views/partials/user/footer") %>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>

            function goBack() {
                window.history.back();
            }

            async function cancelOrder(orderId) {
                try {
                    const confirmation = await Swal.fire({
                        title: "Are you sure?",
                        text: "Do you really want to cancel this order?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#d33",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Yes, Cancel",
                        cancelButtonText: "No"
                    });

                    if (confirmation.isConfirmed) {
                        const response = await fetch(`/cancelOrder/${orderId}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" }
                        });

                        const result = await response.json();

                        if (result.success) {
                            await Swal.fire({
                                title: "Order Cancelled",
                                text: result.message,
                                icon: "success"
                            });


                            window.location.reload();

                        } else {
                            throw new Error(result.message);
                        }
                    }
                } catch (err) {
                    console.error('Error canceling order:', err.message);
                    await Swal.fire("Oops!", "Internal server error occurred.", "error");
                }
            }

            async function returnOrder(orderId) {
                try {
                    const confirmation = await Swal.fire({
                        title: "Return Order",
                        text: "Please provide a reason for returning this item:",
                        input: "textarea",
                        inputPlaceholder: "Enter your reason here...",
                        showCancelButton: true,
                        confirmButtonColor: "#28a745",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Submit",
                        cancelButtonText: "Cancel",
                        inputValidator: (value) => {
                            if (!value) {
                                return "You need to provide a reason!";
                            }
                        }
                    });
                    if (confirmation.isConfirmed) {
                        const reason = confirmation.value;
                        const response = await fetch(`/returnOrder/${orderId}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ reason })
                        });
                        const result = await response.json();
                        if (result.success) {
                            await Swal.fire({
                                title: "Requested",
                                text: "Your Return Order Requested",
                                icon: "success"
                            });
                            window.location.reload();
                        } else {
                            throw new Error(result.message);
                        }
                    }
                } catch (err) {
                    console.error('Error returning order:', err.message);
                    await Swal.fire("Oops!", "Internal server error occurred.", "error");
                }
            }

            async function retryPayment(orderId){
                try {
                    const response = await fetch(`/retryPayment?orderId=${orderId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    const data = await response.json();

                    if (data.success) {
                            const options = {
                                key: data.key,
                                amount: data.amount,
                                currency: 'INR',
                                name: 'Chanel One',
                                description: 'Payment for your order on Chanel One',
                                order_id: data.razorpayOrderId,
                                handler: async function (response) {
                                    const verifyResponse = await fetch('/verify-payment', {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify(response),
                                    });
                                    
                                    const verifyResult = await verifyResponse.json();
                                    if (verifyResult.success) {
                                        window.location.href = '/orderPlaced';
                                    } else {
                                        alert('Payment Verification Failed.');
                                    }
                                },
                                modal: {
                                    ondismiss: function () {
                                        Swal.fire({
                                            title: 'Payment Failed!',
                                            text: 'Your last payment was failed',
                                            icon: 'error',
                                            confirmButtonText: 'Go to Orders'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                window.location.href = "/orders";
                                            }
                                        });
                                    }
                                },
                                prefill: {
                                    name: data.user?.name || 'Guest',
                                    email: data.user?.email || 'guest@example.com',
                                    contact: data.user?.phone || '0000000000',
                                },
                                theme: {
                                    color: '#3399cc',
                                },
                            };
                            const rzp1 = new Razorpay(options);
                            rzp1.open();
                    } else {
                        swal({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'An error occured while placing order'
                        })
                    }
                } catch (error) {
                    console.error('Error placing order:', error);
                    alert('Something went wrong. Please try again.');
                }
            }

            async function cancelSingle(orderId,productId){

                try {
                    const confirmation = await Swal.fire({
                        title: "Are you sure?",
                        text: "Do you really want to cancel this order?",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#d33",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Yes, Cancel",
                        cancelButtonText: "No"
                    });
                    if(confirmation.isConfirmed){

                    const response = await fetch(`/cancelSingle/${orderId}/${productId}`,{
                        method:'GET',
                    })
                    const result = await response.json()
                    if(response.ok){
                        Swal.fire('success','Product Cancelled successfully','success')
                        .then(()=>{
                            location.reload();
                        })
                    }else{
                        Swal.fire('error',result.message,'error')
                    }
                                            
                }
                } catch (error) {
                    console.error(error)
                }
            }

        </script>