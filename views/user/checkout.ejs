<%- include("../../views/partials/user/header") %>

    <br>
    <br>

    <style>
        .clear-icon {
            top: 50%;
            right: 52%;
            transform: translateY(-50%);
            font-size: 18px;
            color: #aaa;
            cursor: pointer;
            display: none;
        }

        .clear-icon:hover {
            color: #000;
        }

        .position-relative input {
            padding-right: 30px;
        }
    </style>

    <div class="container bg0 p-t-75 p-b-85">
        <!-- Breadcrumb Navigation -->
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/cart">Cart</a></li>
                <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
        </nav>

        <br>
        <br>

        <div class="row">
            <!-- Left Section: Address Form & Saved Address Selection -->
            <div class="col-lg-7">
                <h4 class="mtext-109 cl2 p-b-30">Shipping Address</h4>
                <!-- Address Form -->
                <form id="addressForm" class="mb-4">
                    <div class="row gx-3 mb-3">
                        <div class="col-lg-6">
                            <label class="form-label">Name</label>
                            <input class="form-control" value="<%= user.name %>" name="name" type="text"
                                placeholder="Full Name" />
                            <span class="error-message text-danger"></span>
                        </div>
                        <div class="col-lg-6">
                            <label class="form-label">Phone Number</label>
                            <input class="form-control" value="<%= user.phone %>" name="phone" type="tel"
                                placeholder="+91" />
                            <span class="error-message text-danger"></span>
                        </div>
                    </div>

                    <div class="row gx-3 mb-3">
                        <div class="col-lg-12">
                            <label class="form-label">Address</label>
                            <textarea class="form-control" rows="3" name="fullAddress"
                                placeholder="Full Address"></textarea>
                            <span class="error-message text-danger"></span>
                        </div>
                    </div>

                    <div class="row gx-3 mb-3">
                        <div class="col-lg-6">
                            <label class="form-label">City</label>
                            <input class="form-control" name="city" type="text" placeholder="City" />
                            <span class="error-message text-danger"></span>
                        </div>
                        <div class="col-lg-6">
                            <label class="form-label">State</label>
                            <input class="form-control" name="state" type="text" placeholder="State" />
                            <span class="error-message text-danger"></span>
                        </div>
                    </div>

                    <div class="row gx-3 mb-3">
                        <div class="col-lg-6">
                            <label class="form-label">Pin Code</label>
                            <input class="form-control" name="pincode" type="text" placeholder="Pincode" />
                            <span class="error-message text-danger"></span>
                        </div>
                        <div class="col-lg-6">
                            <label class="form-label">Address Type</label>
                            <select class="form-control" name="addressType">
                                <option value="home" selected>Home</option>
                                <option value="office">Office</option>
                            </select>
                            <span class="error-message text-danger"></span>
                        </div>
                    </div>
                    <button class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer mt-4"
                        type="submit" id="submitAddress">Save Address</button>
                </form>
                <hr>
                <!-- Select Saved Address -->
                <h5>Or, Select Saved Address</h5>
                <% if (addresses.length===0) { %>
                    <p>No saved address. Please add a new address above.</p>
                    <% } else { %>
                        <div class="row">
                            <% addresses.forEach(address=> { %>
                                <div class="col-md-6 mb-3">
                                    <div class="card">
                                        <div class=" p-4 card-header d-flex justify-content-between align-items-center">
                                            <span>
                                                <%= address.addressType %>
                                            </span>
                                            <input type="radio" name="savedAddress" value="<%= address._id %>"
                                                class="form-check-input">
                                        </div>
                                        <div class="card-body">
                                            <p><strong>Name:</strong>
                                                <%= address.name %>
                                            </p>
                                            <p><strong>Address:</strong>
                                                <%= address.address %>, <%= address.city %>, <%= address.state %> - <%=
                                                                address.pincode %>
                                            </p>
                                            <p><strong>Phone:</strong>
                                                <%= address.phone %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>
                        </div>
                        <% } %>
                            <h5 class="mt-4">Payment Method</h5>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="cod" value="COD"
                                    required>
                                <label class="form-check-label" for="cod">Cash on Delivery</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="razorpay"
                                    value="razorpay" required>
                                <label class="form-check-label" for="razorpay">RazorPay</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="wallet"
                                    value="wallet" required>
                                <label class="form-check-label" for="wallet">Wallet Payment</label>
                            </div>
            </div>

            <!-- Right Section: Cart Totals -->
            <div class="col-lg-5">
                <div class="bor10 p-lr-40 p-t-30 p-b-40 mt-4">
                    <h4 class="mtext-109 cl2 p-b-30 ">Apply Coupon</h4>
                    <div class="position-relative d-flex mb-3" style="width: 100%;">
                        <span id="clearCouponField" class="clear-icon position-absolute">&times;</span>
                        <input id="couponCodeInput" type="text" class="form-control" placeholder="Enter coupon code">
                        <button id="applyCouponBtn"
                            class="ml-2 flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">Apply</button>
                    </div>
                    <div id="couponMessage" class="text-danger"></div>
                </div>

                <div class="bor10 p-lr-40 p-t-30 p-b-40">
                    <h4 class="mtext-109 cl2 p-b-30">Cart Totals</h4>
                    <div class="flex-w flex-t bor12 p-b-13">
                        <div class="size-208">
                            <span class="stext-110 cl2">Subtotal:</span>
                        </div>
                        <div class="size-209">
                            <span id="subTotal" class="mtext-110 cl2">₹<%= cart.items.reduce((total, item)=> total + 
                                    (item.productId.salePrice * item.quantity), 0).toFixed(2) %></span>
                        </div>
                    </div>

                    <div class="flex-w flex-t bor12 p-t-27 p-b-23">
                        <div class="size-208">
                            <span class="stext-110 cl2">Coupon Discount:</span>
                        </div>
                        <div class="size-209">
                            <span class="mtext-110 cl2 text-success" id="couponDiscount">
                                ₹0.00
                            </span>
                        </div>
                    </div>

                    <div class="flex-w flex-t p-t-27 p-b-33">
                        <div class="size-208">
                            <span class="mtext-101 cl2">Total:</span>
                        </div>
                        <div class="size-209 p-t-1">
                            <span id="total" class="mtext-110 cl2">₹<%= cart.items.reduce((total, item)=> total +
                                    (item.productId.salePrice * item.quantity), 0).toFixed(2) %></span>
                        </div>
                    </div>

                    <button class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer mt-4"
                        id="placeOrderBtn">
                        Place Order
                    </button>
                </div>
            </div>
        </div>
    </div>
    <%- include("../../views/partials/user/footer") %>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

        <script>

            document.getElementById('addressForm').addEventListener('submit', async function (event) {
                event.preventDefault();

                const errorMessages = this.querySelectorAll('.error-message');
                errorMessages.forEach((span) => (span.textContent = ''));

                const nameField = this.querySelector('input[name="name"]');
                const phoneField = this.querySelector('input[name="phone"]');
                const addressField = this.querySelector('textarea[name="fullAddress"]');
                const cityField = this.querySelector('input[name="city"]');
                const stateField = this.querySelector('input[name="state"]');
                const pincodeField = this.querySelector('input[name="pincode"]');

                const name = nameField.value.trim();
                const phone = phoneField.value.trim();
                const fullAddress = addressField.value.trim();
                const city = cityField.value.trim();
                const state = stateField.value.trim();
                const pincode = pincodeField.value.trim();

                const phoneRegex = /^[6-9]\d{9}$/;
                const pincodeRegex = /^\d{6}$/;

                let isValid = true;

                if (!name) {
                    nameField.nextElementSibling.textContent = 'Name is required.';
                    isValid = false;
                }

                if (!phone || !phoneRegex.test(phone)) {
                    phoneField.nextElementSibling.textContent = 'Enter a valid 10-digit phone number starting with 6-9.';
                    isValid = false;
                }

                if (!fullAddress) {
                    addressField.nextElementSibling.textContent = 'Address is required.';
                    isValid = false;
                }

                if (!city) {
                    cityField.nextElementSibling.textContent = 'City is required.';
                    isValid = false;
                }

                if (!state) {
                    stateField.nextElementSibling.textContent = 'State is required.';
                    isValid = false;
                }

                if (!pincode || !pincodeRegex.test(pincode)) {
                    pincodeField.nextElementSibling.textContent = 'Enter a valid 6-digit pin code.';
                    isValid = false;
                }

                if (!isValid) return;

                const formData = new FormData(this);
                const data = {
                    addressType: formData.get('addressType'),
                    name: name,
                    phone: phone,
                    address: formData.get('address'),
                    city: city,
                    fullAddress: fullAddress,
                    state: state,
                    pincode: pincode,
                };

                try {
                    const response = await fetch('/addAddress', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Added',
                            text: 'Address has been successfully added'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message || 'An error occurred while adding address.'
                        });
                    }
                } catch (error) {
                    console.error('Error adding address:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong. Please try again.'
                    });
                }
            });

            document.getElementById('placeOrderBtn').addEventListener('click', async function (event) {
                event.preventDefault();

                const selectedAddress = document.querySelector('input[name="savedAddress"]:checked');
                const paymentMethods = document.querySelector('input[name="paymentMethod"]:checked');
                const couponCode = document.getElementById('couponCodeInput').value;
                if (!selectedAddress || !paymentMethods) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Required Field',
                        text: 'Please Select Address and Payment Method'
                    })
                    return;
                }

                const orderData = {
                    addressId: selectedAddress.value,
                    paymentMethod: paymentMethods.value,
                    couponCode,
                };

                try {
                    const response = await fetch('/placeOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(orderData),
                    });

                    const data = await response.json();

                    if (data.success) {
                        if (paymentMethods.value == 'razorpay') {
                            const options = {
                                key: data.key,
                                amount: data.amount,
                                currency: 'INR',
                                name: 'Chanel One',
                                description: 'Payment for your order on Chanel One',
                                order_id: data.razorpayOrderId,
                                handler: async function (response) {
                                    const verifyResponse = await fetch('/verify-payment', {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify(response),
                                    });
                                    const verifyResult = await verifyResponse.json();
                                    if (verifyResult.success) {
                                        window.location.href = '/orderPlaced';
                                    } else {
                                        alert('Payment Verification Failed.');
                                    }
                                },
                                modal: {                                    
                                    ondismiss: function () {
                                        Swal.fire({
                                            title: 'Payment Failed!',
                                            text: 'Your last payment was failed',
                                            icon: 'error',
                                            confirmButtonText: 'Go to Orders'
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                window.location.href = "/orders";
                                            }
                                        });
                                    }
                                },
                                prefill: {
                                    name: data.user?.name || 'Guest',
                                    email: data.user?.email || 'guest@example.com',
                                    contact: data.user?.phone || '0000000000',
                                },
                                theme: {
                                    color: '#3399cc',
                                },
                            };
                            const rzp1 = new Razorpay(options);
                            rzp1.open();
                        } else {
                            window.location.href = '/orderPlaced';
                        }
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'An error occured while placing order'
                        })
                    }
                } catch (error) {
                    console.error('Error placing order:', error);
                    alert('Something went wrong. Please try again.');
                }
            });

            document.getElementById('applyCouponBtn').addEventListener('click', async () => {
                const couponCode = document.getElementById('couponCodeInput').value;
                const orderTotal = parseFloat(document.getElementById('subTotal').innerText.replace('₹', ''));
                const userId = "<%= user._id %>";

                if (!couponCode) {
                    document.getElementById('couponMessage').innerText = 'Please enter a coupon code.';
                    return;
                }

                try {
                    const response = await fetch('/applyCoupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ couponCode, userId, orderTotal }),
                    });
                    const result = await response.json();
                    if (result.success) {
                        const discountedTotal = orderTotal - result.discount;
                        document.getElementById('total').innerText = `₹${discountedTotal.toFixed(2)}`;
                        document.getElementById('couponDiscount').innerText = `₹${result.discount.toFixed(2)}`
                        document.getElementById('couponMessage').innerText = 'Coupon applied successfully!';
                        document.getElementById('couponMessage').classList.remove('text-danger');
                        document.getElementById('couponMessage').classList.add('text-success');
                    } else {
                        document.getElementById('couponMessage').innerText = result.message;
                        document.getElementById('couponMessage').classList.add('text-danger');
                    }
                } catch (error) {
                    console.error('Error applying coupon:', error);
                    document.getElementById('couponMessage').innerText = 'An error occurred while applying the coupon.';
                }
            });

            document.addEventListener("DOMContentLoaded", function () {
                const couponInput = document.getElementById("couponCodeInput");
                const clearIcon = document.getElementById("clearCouponField");
                const orderTotal = parseFloat(document.getElementById('subTotal').innerText.replace('₹', ''));

                couponInput.addEventListener("input", function () {
                    if (this.value) {
                        clearIcon.style.display = "block";
                    } else {
                        clearIcon.style.display = "none";
                    }
                });

                clearIcon.addEventListener("click", function () {
                    couponInput.value = "";
                    clearIcon.style.display = "none";
                    couponInput.focus();
                    document.getElementById('total').innerText = `₹${orderTotal.toFixed(2)}`;
                    document.getElementById('couponMessage').innerText = '';
                    document.getElementById('couponDiscount').innerText = `₹0.00`
                });
            });

        </script>