<%-include("../../views/partials/admin/header")%>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Categories</h2>
                <p>Add, edit or delete a category</p>
            </div>
            <!-- <div>
                <input type="text" placeholder="Search Categories" class="form-control bg-white" />
            </div> -->
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form   onsubmit="createCategory(event)">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" name="name" placeholder="Type here" class="form-control" id="name" />
                                <div id="name-error" class="error-message" style="color: red; display: none;"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea id="descriptionId" placeholder="Type here" class="form-control"></textarea>
                                <div id="description-error" cla ss="error-message" style="color: red; display: none;">
                                </div>
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-primary">Create category</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-9">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>No.</th>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Offer %</th>
                                        <th>Offer Action</th>
                                        <th>List Action</th>
                                        <th>Edit Action</th>
                                        <th>Delete Action</th>
                             
                                    </tr>
                                </thead>
                                <tbody>
                                    <%cat.reverse().forEach((category,index)=>{%>
                                        <tr>
                                            <td><%=index+1+(currentPage-1)*6%></td>
                                            <td><b>
                                                    <%=category.name%>
                                                </b></td>
                                            <td>
                                                <%=category.description%>
                                            </td>
                                            <td>
                                                <%if(category.categoryOffer){%>
                                                    <%=category.categoryOffer%>
                                                        <%}else{%>
                                                            0%
                                                            <%}%>
                                            </td>
                                            <td>
                                                <%if(category.categoryOffer===0){%>
                                                    <button class="btn btn-sm btn-brand"><a style="text-decoration:none"
                                                            class="text-white" href="#"
                                                            onclick="addOffer('<%=category._id%>')">Add
                                                            Offer</a></button>
                                                <%}else{%>
                                                        <button class="btn btn-sm btn-danger"><a style="text-decoration:none"
                                                                class="text-white" href="#"
                                                                onclick="removeOffer('<%=category._id%>')">Remove
                                                                </a></button>
                                                <%}%>
                                            </td>
                                            <!-- <td>
                                                <%if(category.isListed){%>
                                                    <span>Listed</span>
                                                    <%}else{%>
                                                        <span>Unlisted</span>
                                                        <%}%>

                                            </td> -->
                                            <td>
                                                <%if(category.isListed){%>
                                                    <button class="btn btn-sm btn-brand">
                                                        <a style="text-decoration:none" class="text-white"
                                                        onclick="unlistCategory('<%=category._id%>')">Unlist</a>
                                                    </button>
                                                    <%}else{%>
                                                        <button class="btn btn-sm  btn-warning">
                                                            <a style="text-decoration:none" class="text-white"
                                                            href="/admin/listCategory?id=<%=category._id%>&page=<%=currentPage%>">List</a>
                                                        </button>
                                                        <%}%>
                                            </td>
                                            <td><button class="btn">
                                                    <a href="/admin/editCategory?id=<%=category._id%>">Edit</a>
                                                </button>
                                            </td>
                                            <td>
                                                <% if (!category.isDeleted) { %>
                                                    <button class="btn btn-sm btn-danger"
                                                        onclick="softDeleteCategory('<%= category._id %>')">
                                                        Delete
                                                    </button>
                                                    <% } else { %>
                                                    <span class="text-muted">Deleted</span>
                                                <%}%>
                                            </td>
                                            </td>
                                        </tr>
                                        <%})%>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- .col// -->
                </div>
                <!-- .row // -->
            </div>
            <!-- card body .// -->
        </div>
        <div class="pagination-area mt-15 mb-50">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-start">
                    <%for(let i=1;i<=totalPages;i++){%>
                        <li class="page-item <%=(i===currentPage) ? 'active': '' %>">
                            <a class="page-link" href="?page=<%=i%>">
                                <%=i%>
                            </a>
                        </li>
                        <%}%>
                </ul>
            </nav>
        </div>
        <!-- card .// -->
    </section>
    <!-- content-main end// -->
    <%-include("../../views/partials/admin/footer")%>

        <script>

          async function createCategory(event) {
                event.preventDefault();
                if (!validateForm()) {
                    return 
                }
                const name = document.getElementById("name").value;
                const description = document.getElementById('descriptionId').value;

                try {
                    const response = await fetch('/admin/category', {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify({ name, description })
                    })
                        const result = await response.json()
    
                            if (response.ok) {
                       
                                Swal.fire(
                                    'Added!',
                                    'Category added Successfully .',
                                    'success'
                                ).then(result=>{
                                    location.reload();
                                })
                            }else{
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops',
                                    text: 'Category already exists'
                                }).then(result=>{
                                    console.log(result);
                                })
                            }
                } catch (error) {                    
                    Swal.fire({
                        icon: 'error',
                        title: "Oops",
                        text: 'An error occured while adding the category'
                    })
                    console.log('error while adding category',error)
                }                     
            }

            function validateForm() {
                clearErrorMessages();
                const name = document.getElementById('name').value.trim();
                const description = document.getElementById('descriptionId').value.trim();
                isValid = true;


                if (name == "") {
                    displayErrorMessage("name-error", "Please enter a name");
                    isValid = false
                } else if (!/^[a-zA-Z\s]+$/.test(name)) {
                    displayErrorMessage('name-error', "Category name should contain only alphabetic characters");
                    isValid = false;
                }
                if (description === "") {
                    displayErrorMessage("description-error", "Please enter a description");
                    isValid = false;
                }
                return isValid
            }

            function displayErrorMessage(elementId, message) {
                var errorElement = document.getElementById(elementId);
                errorElement.innerText = message;
                errorElement.style.display = 'block';
            }

            function clearErrorMessages() {
                const errorElements = document.getElementsByClassName('error-message');
                Array.from(errorElements).forEach((element) => {
                    element.innerText = '';
                    element.style.display = 'none';
                })
            }

            async function addOffer(categoryId) {
                const { value: amount } = await Swal.fire({
                    title: 'Offer in percentage',
                    input: 'number',
                    inputLabel: 'Percentage',
                    inputPlaceholder: '%'
                });
                if (amount) {
                    try {
                        const response = await fetch('/admin/addCategoryOffer', {
                            method: 'POST',
                            headers: {
                                'content-type': "application/json"
                            },
                            body: JSON.stringify({
                                percentage: amount,
                                categoryId: categoryId,
                            }),
                        });
                        const data = await response.json();
                        if (response.ok) {
                            Swal.fire(
                                "Offer added",
                                "The offer has been added",
                                'success'
                            ).then(() => {
                                location.reload();
                            })
                        } else {
                            Swal.fire("Failed", data.message || 'Adding offer failed', 'error')
                        }
                    } catch (error) {
                        Swal.fire(
                            "Error",
                            'An error occured while adding the offer',
                            'error'
                        );
                        console.log('Error adding offer', error);
                    }
                }
            }

            async function removeOffer(categoryId) {

                try {
                    const response = await fetch('/admin/removeCategoryOffer', {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify({
                            categoryId: categoryId,
                        })
                    })

                    const data = await response.json();
                    if (response.ok && data.status === true) {
                        Swal.fire(
                            "Offer Removed",
                            "Offer has been removed ",
                            "success",
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire('Failed', data.message || "Removing offer failed", error)
                        console.log('Error')
                    }
                }
                catch (error) {
                    Swal.fire(
                        "Error",
                        'An error occured while removing the offer',
                        "eror"
                    );
                    console.error("Error removing offer", error)
                }

            }

            async function softDeleteCategory(categoryId) {
   
                const confirmation = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to recover this category!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                });

                if (confirmation.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/deleteCategory/${categoryId}`, {
                            method: 'POST', 
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();

                        if (response.ok) {
                            Swal.fire(
                                'Deleted!',
                                'The category has been soft deleted.',
                                'success'
                            ).then(() => {
                                // Reloading the page
                                location.reload();
                            });
                        } else {
                            Swal.fire('Error', data.message || 'Failed to delete the category', 'error');
                        }
                    } catch (error) {
                        console.error('Error soft deleting category:', error);
                        Swal.fire('Error', 'An unexpected error occurred while deleting the category', 'error');
                    }
                }
            }

            async function unlistCategory(categoryId){
            const confirmation = await Swal.fire({
                title: 'Are you sure?',
                text: "You want to Unlist this Category?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, Unlist it!'
            })
            
            if (confirmation.isConfirmed) {
                try {
                    const response = await fetch(`/admin/unlistCategory?id=${categoryId}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json()
                    if (response.ok) {
                        Swal.fire(
                            'Unlisted!',
                            'The Category has been Unlisted.',
                            'success'
                        ).then(() => {
                            location.reload();
                        })
                    } else {
                        Swal.fire('Error', data.message || 'Failed to Unlist the category', 'error')
                        .then(()=>{
                            location.href = data.redirect
                        })
                    }
                } catch (error) {
                    console.error('Error Unlisting the Category:', error);
                    Swal.fire('Error', 'An unexpected error occurred while Unlisting the category', 'error');
                }
            }
        }
    

        </script>