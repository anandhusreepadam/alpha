<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
    </head>
    <section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Products</h2>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
    <header class="card-header text-center mb-20">
        <form action="" method="get" class="d-inline">
            <div class="input-group input-group-sm border border-1 border-grey rounded-pill"
                style="width: 500px; margin-left: 230px;">
                <input type="text" class="form-control border-0 rounded-pill" placeholder="Search products"
                    name="search">
                <button class="btn  border-0" type="submit">Search</button>
            </div>
        </form>
    </header>
    <div class="right mt-5">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"><b>No.</b></th>
                    <th scope="col"><b>Product name</b></th>
                    <!-- <th scope="col"><b>Brand</b></th> -->
                    <th scope="col"><b>Category</b></th>
                    <th scope="col"><b>Sale Price</b></th>
                    <th scope="col"><b>Offer %</b></th>
                    <th scope="col"><b>Offer</b></th>
                    <th scope="col"><b>Quantity</b></th>
                    <th scope="col"><b>Action</b></th>
                    <th scope="col"><b>Edit</b></th>
                    <th scope="col"><b>Delete Action</b></th>
                </tr>
            </thead>
            <tbody>

                <%for(let i=data.length-1;i>=0;i--){%>
                    <tr>
                        <td>
                            <%=data.length-i%>
                        </td>
                        <td>
                            <%=data[i].productName%>
                        </td>
                        <!-- <td><%=data[i].brand%></td> -->
                        <td>
                            <%=data[i].category.name%>
                        </td>
                        <td>
                            <%=data[i].salePrice%>
                        </td>
                        <td>
                            <%if(locals.data[i].productOffer){%>
                                <%=data[i].productOffer%>
                                    <%}else{%>
                                        0%
                                        <%}%>
                        </td>
                        <td>
                            <%if(locals.data[i].productOffer==0){%>
                                <button class="btn btn-sm btn-md" onclick="addOffer('<%=data[i]._id%>')"
                                    style="width: 100px;">
                                    <a href="#" class="text-white">Add Offer</a>
                                </button>
                                <%}else{%>
                                    <button class="btn btn-sm  btn-danger" onclick="removeOffer('<%=data[i]._id%>')"
                                        style="width: 100px;">
                                        <a href="#" class="text-white">Remove</a>
                                    </button>
                                    <%}%>
                        </td>
                        <td>
                            <%=data[i].quantity%>
                        </td>
                        <td>
                            <%if(data[i].isBlocked==false){%>
                                <button class="btn btn-sm btn-md" style="width: 80px;">
                                    <a onclick="blockProduct('<%=data[i]._id%>')" class="text-white"
                                        style="text-decoration: none;">Block</a>
                                </button>
                                <%}else{%>
                                    <button class="btn btn-sm btn-danger" style="width: 80px;">
                                        <a href="/admin/unblockProduct?id=<%=data[i]._id%>&page=<%=currentPage%>" class="text-white"
                                            style="text-decoration: none;">Unblock</a>
                                    </button>
                                <%}%>
                        </td>
                        <td>
                            <button class="btn" style="width: 80px;">
                                <a href="/admin/editProduct?id=<%=data[i]._id%>" style="text-decoration: none;">Edit</a>
                            </button>
                        </td>
                        <td>
                            <% if (!data[i].isDeleted) { %>
                                <button class="btn btn-sm btn-danger" onclick="softDeleteProduct('<%=data[i]._id%>')">
                                    Delete
                                </button>
                                <% } else { %>
                                    <span class="text-muted">Deleted</span>
                                    <% } %>
                        </td>
                    </tr>
                    <% } %>
            </tbody>

        </table>
    </div>
    </div>
    </div>
    <style>
        .main-wrap {
            min-height: 100vh;
        }
    </style>

<div class="pagination-area mt-15 mb-50">
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-start">
            <%for(let i=1;i<=totalPages;i++){%>
                <li class="page-item <%=(i===currentPage) ? 'active': '' %>">
                    <a class="page-link" href="?page=<%=i%>">
                        <%=i%>
                    </a>
                </li>
                <%}%>
        </ul>
    </nav>
</div>
</div>
</div>
</section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <%- include("../../views/partials/admin/footer") %>
        <script>

            async function addOffer(productId) {
                const { value: amount } = await Swal.fire({
                    title: 'Offer in percentage:',
                    input: 'number',
                    inputLabel: 'percentage',
                    inputPlaceholder: '%'
                })
                $.ajax({
                    url: '/admin/addProductOffer',
                    method: 'post',
                    data: {
                        percentage: amount,
                        productId: productId
                    },
                    success: (response) => {
                        if (response.status == true) {
                            Swal.fire(
                                'Offer added',
                                'The offer has been added',
                                'success'
                            ).then(() => {

                                location.reload();
                            })
                        } else {
                            Swal.fire(
                                'Error',
                                response.message||'Error while adding offer',
                                'error'
                            );
                        }
                    }
                })
            }

            function removeOffer(productId) {
                try {
                    Swal.fire({
                        title: 'Remove offer',
                        text: 'Are you sure you want to remove this offer',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: 'd33',
                        confirmButtonText: 'Yes, Remove It!',
                        timer: 5000,
                        timerProgressBar: true
                    }).then(async (result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/admin/removeProductOffer',
                                method: 'post',
                                data: {
                                    productId: productId
                                },
                                success: (response) => {
                                    if (response.status == true) {
                                        Swal.fire('Removed!', 'The offer has been removed', 'success')
                                            .then(() => {
                                                location.reload()
                                            })
                                    } else if (response.status == false) {
                                        Swal.fire('failed');
                                    } else {
                                        alert('failed')
                                    }
                                }
                            })
                        }
                    })
                } catch (error) {
                    console.error(error)
                }
            }

            async function softDeleteProduct(productId) {
                const confirmation = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to recover this Product!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                })

                if (confirmation.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/deleteProduct/${productId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        const data = await response.json()
                        if (response.ok) {
                            Swal.fire(
                                'Deleted!',
                                'The product has been soft deleted.',
                                'success'
                            ).then(() => {
                                location.reload();
                            })
                        } else {
                            Swal.fire('Error', data.message || 'Failed to delete the proudct', 'error');
                        }

                    } catch (error) {
                        console.error('Error soft deleting Product:', error);
                        Swal.fire('Error', 'An unexpected error occurred while deleting the product', 'error');
                    }
                }
            }

            async function blockProduct(productId) {
                const confirmation = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You want to block this Product?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, Block it!'
                })

                if (confirmation.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/blockProduct?id=${productId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });
                        const data = await response.json()
                        if (response.ok) {
                            Swal.fire(
                                'Blocked!',
                                'The product has been Blocked.',
                                'success'
                            ).then(() => {
                                location.reload();
                            })
                        } else {
                            Swal.fire('Error', data.message || 'Failed to Block the proudct', 'error')
                                .then(() => {
                                    location.href = data.redirect
                                })

                        }

                    } catch (error) {
                        console.error('Error Blocking the Product:', error);
                        Swal.fire('Error', 'An unexpected error occurred while blocking the product', 'error');
                    }
                }
            }

        </script>